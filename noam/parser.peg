{
package noam
}

Input <- root:Object EOF {
  return root, nil
}

Value <- leaf:String {
   return leaf.(string), nil
} / subtree:Object {
   return subtree, nil
}

Pair <- head:String _ ':' _ value:Value {
    return makeNode(head, value)
}

Object ← _ '{' _ first:Pair rest:( _ ',' _ Pair )*  _ '}' _ {
    return makeChildren(first, rest)
}

String ← '"' ( !EscapedChar . / '\\' EscapeSequence )* '"' {
    c.text = bytes.Replace(c.text, []byte(`\/`), []byte(`/`), -1)
    return strconv.Unquote(string(c.text))
}

EscapedChar ← [\x00-\x1f"\\]

EscapeSequence ← SingleCharEscape / UnicodeEscape

SingleCharEscape ← ["\\/bfnrt]

UnicodeEscape ← 'u' HexDigit HexDigit HexDigit HexDigit

_ "whitespace" <- [ \n\t\r]*

EOF <- !.
